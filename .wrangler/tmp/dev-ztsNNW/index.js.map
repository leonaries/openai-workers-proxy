{
  "version": 3,
  "sources": ["../bundle-ZCd3a3/checked-fetch.js", "../bundle-ZCd3a3/strip-cf-connecting-ip-header.js", "../../../src/index.js", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-ZCd3a3/middleware-insertion-facade.js", "../../../node_modules/wrangler/templates/middleware/common.ts", "../bundle-ZCd3a3/middleware-loader.entry.ts"],
  "sourceRoot": "/Users/leon/Desktop/yideng/openai-workers-proxy/.wrangler/tmp/dev-ztsNNW",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "function stripCfConnectingIPHeader(input, init) {\n\tconst request = new Request(input, init);\n\trequest.headers.delete(\"CF-Connecting-IP\");\n\treturn request;\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\treturn Reflect.apply(target, thisArg, [\n\t\t\tstripCfConnectingIPHeader.apply(null, argArray),\n\t\t]);\n\t},\n});\n", "export default {\n  async fetch(request, env, ctx) {\n    console.log('Incoming request:', {\n      method: request.method,\n      url: request.url,\n      headers: Object.fromEntries(request.headers.entries())\n    });\n\n    const url = new URL(request.url);\n\n    // \u5904\u7406 CORS \u9884\u68C0\u8BF7\u6C42\n    if (request.method === 'OPTIONS') {\n      console.log('Handling CORS preflight request');\n      return new Response(null, {\n        status: 200,\n        headers: {\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\n          'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n          'Access-Control-Max-Age': '86400',\n        },\n      });\n    }\n\n    // GraphQL \u8DEF\u7531\u5904\u7406\n    if (url.pathname === '/graphql') {\n      if (request.method !== 'POST') {\n        return new Response(JSON.stringify({ error: 'Method Not Allowed' }), {\n          status: 405,\n          headers: {\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Origin': '*',\n          }\n        });\n      }\n\n      try {\n        const { query, variables, operationName } = await request.json();\n        console.log('GraphQL request:', { operationName, querySnippet: query?.slice(0, 80) });\n\n        const sendJson = (data, status = 200) => new Response(JSON.stringify({ data }), {\n          status,\n          headers: {\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Origin': '*',\n          },\n        });\n\n        const sendGraphQLError = (message, status = 400) => new Response(JSON.stringify({ errors: [{ message }] }), {\n          status,\n          headers: {\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Origin': '*',\n          },\n        });\n\n        const normalized = (query || '').replace(/\\s+/g, ' ').toLowerCase();\n\n        // createSession\n        if (normalized.includes('mutation') && normalized.includes('createsession')) {\n          const sessionId = `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n          return sendJson({ createSession: { sessionId, success: true } });\n        }\n\n        // chatHistory\uFF08\u793A\u4F8B\u8FD4\u56DE\u7A7A\u6570\u7EC4\uFF09\n        if (normalized.includes('query') && normalized.includes('chathistory')) {\n          return sendJson({ chatHistory: [] });\n        }\n\n        // sendMessage\uFF08\u56DE\u663E\u7528\u6237\u6D88\u606F\uFF0C\u4FBF\u4E8E\u524D\u7AEF\u5148\u4E50\u89C2\u66F4\u65B0\uFF09\n        if (normalized.includes('mutation') && normalized.includes('sendmessage')) {\n          const input = variables?.input || {};\n          const content = input.content || '';\n          const message = {\n            id: `msg_${Date.now()}_user`,\n            content,\n            isUser: true,\n            timestamp: new Date().toISOString(),\n            success: true,\n            error: null\n          };\n          return sendJson({ sendMessage: message });\n        }\n\n        // getAIResponse\uFF08\u8F6C\u53D1\u5230 OpenAI \u5E76\u8FD4\u56DE assistant \u6D88\u606F\uFF09\n        if (normalized.includes('mutation') && normalized.includes('getairesponse')) {\n          const resolvedApiKey = request.headers.get('x-openai-key') || env.OPENAI_API_KEY;\n          if (!resolvedApiKey) {\n            return sendGraphQLError('OpenAI API key is not configured', 500);\n          }\n\n          const input = variables?.input || {};\n          const openaiRequestBody = {\n            model: input.model || 'gpt-3.5-turbo',\n            messages: input.messages || [],\n            temperature: input.temperature ?? 0.7,\n            max_tokens: input.max_tokens ?? 1000,\n            stream: false,\n            ...input,\n          };\n\n          const openaiResponse = await fetch('https://api.openai.com/v1/chat/completions', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Bearer ${resolvedApiKey}`,\n            },\n            body: JSON.stringify(openaiRequestBody),\n          });\n\n          if (!openaiResponse.ok) {\n            const errorText = await openaiResponse.text();\n            console.error('OpenAI API error (GraphQL):', errorText);\n            return sendGraphQLError(`OpenAI API returned ${openaiResponse.status}: ${errorText}`, openaiResponse.status);\n          }\n\n          const responseData = await openaiResponse.json();\n          const content = responseData.choices?.[0]?.message?.content || '';\n          const message = {\n            id: responseData.id || `msg_${Date.now()}_ai`,\n            content,\n            isUser: false,\n            timestamp: new Date().toISOString(),\n            success: true,\n            error: null,\n          };\n          return sendJson({ getAIResponse: message });\n        }\n\n        return sendGraphQLError('Unsupported GraphQL operation');\n      } catch (error) {\n        console.error('GraphQL handler error:', error);\n        return new Response(JSON.stringify({ errors: [{ message: error.message }] }), {\n          status: 500,\n          headers: {\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Origin': '*',\n          },\n        });\n      }\n    }\n\n    // \u53EA\u5141\u8BB8 POST \u8BF7\u6C42\n    if (request.method !== 'POST') {\n      console.log('Method not allowed:', request.method);\n      return new Response(JSON.stringify({ error: 'Method Not Allowed' }), { \n        status: 405,\n        headers: {\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*',\n        }\n      });\n    }\n\n    try {\n      // \u68C0\u67E5\u73AF\u5883\u53D8\u91CF\uFF08\u5141\u8BB8\u901A\u8FC7\u8BF7\u6C42\u5934 x-openai-key \u8986\u76D6\uFF0C\u4FBF\u4E8E\u672C\u5730\u8054\u8C03\uFF09\n      const resolvedApiKey = request.headers.get('x-openai-key') || env.OPENAI_API_KEY;\n      if (!resolvedApiKey) {\n        console.error('OPENAI_API_KEY is not set');\n        return new Response(JSON.stringify({ \n          error: 'Configuration Error',\n          message: 'OpenAI API key is not configured'\n        }), {\n          status: 500,\n          headers: {\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Origin': '*',\n          },\n        });\n      }\n\n      // \u83B7\u53D6\u8BF7\u6C42\u4F53\n      let requestBody;\n      try {\n        const requestText = await request.text();\n        console.log('Request body text:', requestText);\n        requestBody = JSON.parse(requestText);\n      } catch (parseError) {\n        console.error('JSON parse error:', parseError.message);\n        return new Response(JSON.stringify({ \n          error: 'Invalid JSON',\n          message: 'Request body is not valid JSON'\n        }), {\n          status: 400,\n          headers: {\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Origin': '*',\n          },\n        });\n      }\n\n      console.log('Parsed request body:', requestBody);\n      \n      // \u9A8C\u8BC1\u5FC5\u8981\u7684\u5B57\u6BB5\n      if (!requestBody.messages || !Array.isArray(requestBody.messages)) {\n        console.error('Invalid messages format:', requestBody.messages);\n        return new Response(JSON.stringify({ \n          error: 'Invalid messages format',\n          message: 'messages field is required and must be an array'\n        }), {\n          status: 400,\n          headers: {\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Origin': '*',\n          },\n        });\n      }\n\n      // \u51C6\u5907\u53D1\u9001\u7ED9 OpenAI \u7684\u8BF7\u6C42\u4F53\n      const openaiRequestBody = {\n        model: requestBody.model || 'gpt-3.5-turbo',\n        messages: requestBody.messages,\n        temperature: requestBody.temperature || 0.7,\n        max_tokens: requestBody.max_tokens || 1000,\n        stream: requestBody.stream || false,\n        ...requestBody // \u5141\u8BB8\u4F20\u9012\u5176\u4ED6\u53C2\u6570\n      };\n\n      console.log('Sending request to OpenAI:', {\n        model: openaiRequestBody.model,\n        messagesCount: openaiRequestBody.messages.length,\n        stream: openaiRequestBody.stream\n      });\n\n      // \u8C03\u7528 OpenAI API\n      const openaiResponse = await fetch('https://api.openai.com/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${resolvedApiKey}`,\n        },\n        body: JSON.stringify(openaiRequestBody),\n      });\n\n      console.log('OpenAI response status:', openaiResponse.status);\n      console.log('OpenAI response headers:', Object.fromEntries(openaiResponse.headers.entries()));\n\n      // \u68C0\u67E5 OpenAI API \u54CD\u5E94\u72B6\u6001\n      if (!openaiResponse.ok) {\n        const errorText = await openaiResponse.text();\n        console.error('OpenAI API error:', errorText);\n        \n        return new Response(JSON.stringify({\n          error: 'OpenAI API Error',\n          message: `OpenAI API returned ${openaiResponse.status}: ${errorText}`,\n          status: openaiResponse.status\n        }), {\n          status: openaiResponse.status,\n          headers: {\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Origin': '*',\n          },\n        });\n      }\n\n      // \u5904\u7406\u6D41\u5F0F\u54CD\u5E94\n      if (requestBody.stream) {\n        console.log('Returning streaming response');\n        return new Response(openaiResponse.body, {\n          status: openaiResponse.status,\n          headers: {\n            'Content-Type': 'text/event-stream',\n            'Cache-Control': 'no-cache',\n            'Connection': 'keep-alive',\n            'Access-Control-Allow-Origin': '*',\n          },\n        });\n      }\n\n      // \u5904\u7406\u666E\u901A\u54CD\u5E94\n      const responseData = await openaiResponse.json();\n      console.log('OpenAI response data:', {\n        id: responseData.id,\n        model: responseData.model,\n        choices: responseData.choices?.length\n      });\n      \n      return new Response(JSON.stringify(responseData), {\n        status: openaiResponse.status,\n        headers: {\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*',\n        },\n      });\n\n    } catch (error) {\n      console.error('Unhandled error:', {\n        name: error.name,\n        message: error.message,\n        stack: error.stack\n      });\n      \n      return new Response(JSON.stringify({ \n        error: 'Internal Server Error',\n        message: error.message,\n        type: error.name\n      }), {\n        status: 500,\n        headers: {\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*',\n        },\n      });\n    }\n  },\n};\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/Users/leon/Desktop/yideng/openai-workers-proxy/src/index.js\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/Users/leon/Desktop/yideng/openai-workers-proxy/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/Users/leon/Desktop/yideng/openai-workers-proxy/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/Users/leon/Desktop/yideng/openai-workers-proxy/src/index.js\";\n\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/Users/leon/Desktop/yideng/openai-workers-proxy/.wrangler/tmp/bundle-ZCd3a3/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/Users/leon/Desktop/yideng/openai-workers-proxy/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/Users/leon/Desktop/yideng/openai-workers-proxy/.wrangler/tmp/bundle-ZCd3a3/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/Users/leon/Desktop/yideng/openai-workers-proxy/.wrangler/tmp/bundle-ZCd3a3/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": []
}
